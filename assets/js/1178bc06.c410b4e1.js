"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[502],{9528:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var r=n(5773),a=n(808),o=(n(7378),n(5318)),i=["components"],l={},s="spread",d={unversionedId:"spread/readme",id:"spread/readme",title:"spread",description:"spread({ source, targets })",source:"@site/../src/spread/readme.md",sourceDirName:"spread",slug:"/spread/",permalink:"/methods/spread/",draft:!1,editUrl:"https://github.com/effector/patronum/tree/main/src/../src/spread/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"methodsSidebar",previous:{title:"splitMap",permalink:"/methods/split-map/"},next:{title:"status",permalink:"/methods/status/"}},c={},p=[{value:"<code>spread({ source, targets })</code>",id:"spread-source-targets-",level:2},{value:"Motivation",id:"motivation",level:3},{value:"Formulae",id:"formulae",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Example",id:"example",level:3},{value:"Save fields of payload to different stores",id:"save-fields-of-payload-to-different-stores",level:4},{value:"Call events on store changes",id:"call-events-on-store-changes",level:4},{value:"<code>source = spread({ targets })</code>",id:"source--spread-targets-",level:2},{value:"Motivation",id:"motivation-1",level:3},{value:"Formulae",id:"formulae-1",level:3},{value:"Arguments",id:"arguments-1",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example-1",level:3},{value:"Conditionally save value to stores",id:"conditionally-save-value-to-stores",level:4},{value:"Nested spreading",id:"nested-spreading",level:4}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"spread"},"spread"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { spread } from 'patronum/spread';\n")),(0,o.kt)("h2",{id:"spread-source-targets-"},(0,o.kt)("inlineCode",{parentName:"h2"},"spread({ source, targets })")),(0,o.kt)("h3",{id:"motivation"},"Motivation"),(0,o.kt)("p",null,"This method allows to trigger many target at once, if they match the source structure.\nIt is useful when you need to destructure object and save values to different stores."),(0,o.kt)("h3",{id:"formulae"},"Formulae"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"spread({ source, targets: { field: target, ... } })\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," is triggered with ",(0,o.kt)("strong",{parentName:"li"},"object"),", extract ",(0,o.kt)("inlineCode",{parentName:"li"},"field")," from data, and trigger ",(0,o.kt)("inlineCode",{parentName:"li"},"target")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"targets")," can have multiple properties"),(0,o.kt)("li",{parentName:"ul"},"If the ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," was triggered with non-object, nothing would be happening"),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," is triggered with object but without propertpy ",(0,o.kt)("inlineCode",{parentName:"li"},"field"),", target for this ",(0,o.kt)("inlineCode",{parentName:"li"},"field")," will not be triggered")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"source")," ",(0,o.kt)("inlineCode",{parentName:"li"},"(Event<T>")," | ",(0,o.kt)("inlineCode",{parentName:"li"},"Store<T>")," | ",(0,o.kt)("inlineCode",{parentName:"li"},"Effect<T>)")," \u2014 Source unit, data passed to it should be an object with fields from ",(0,o.kt)("inlineCode",{parentName:"li"},"targets")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"targets")," ",(0,o.kt)("inlineCode",{parentName:"li"},"(Record<string, Event<T> | Store<T> | Effect<T>>)")," \u2014 Flat object which key is key in ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," payload, and value is unit to store value to.")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("h4",{id:"save-fields-of-payload-to-different-stores"},"Save fields of payload to different stores"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { createStore, createEvent } from 'effector';\nimport { spread } from 'patronum/spread';\n\nconst $first = createStore('');\nconst $last = createStore('');\n\nconst formReceived = createEvent();\n\nspread({\n  source: formReceived,\n  targets: {\n    first: $first,\n    last: $last,\n  },\n});\n\n$first.watch((first) => console.log('First name', first));\n$last.watch((last) => console.log('Last name', last));\n\nformReceived({ first: 'Sergey', last: 'Sova' });\n// => First name Sergey\n// => Last name Sova\n\nformReceived({ first: 'Patronum' });\n// => First name Patronum\n")),(0,o.kt)("h4",{id:"call-events-on-store-changes"},"Call events on store changes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { createStore, createEvent } from 'effector';\nimport { spread } from 'patronum/spread';\n\nconst save = createEvent();\nconst $form = createStore(null).on(save, (_, form) => form);\n\nconst firstNameChanged = createEvent();\nconst lastNameChanged = createEvent();\n\nspread({\n  source: $form,\n  targets: {\n    first: firstNameChanged,\n    last: lastNameChanged,\n  },\n});\n\nfirstNameChanged.watch((first) => console.log('First name', first));\nlastNameChanged.watch((last) => console.log('Last name', last));\n\nsave({ first: 'Sergey', last: 'Sova' });\n// => First name Sergey\n// => Last name Sova\n\nsave(null);\n// Nothing, because store is null\n")),(0,o.kt)("h2",{id:"source--spread-targets-"},(0,o.kt)("inlineCode",{parentName:"h2"},"source = spread({ targets })")),(0,o.kt)("h3",{id:"motivation-1"},"Motivation"),(0,o.kt)("p",null,"This overload creates event ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," that should be triggered and returns it.\nIt is useful to pass ",(0,o.kt)("inlineCode",{parentName:"p"},"source")," immediately to another method as argument."),(0,o.kt)("h3",{id:"formulae-1"},"Formulae"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"source = spread({ targets: { field: target, ... } })\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," is triggered with ",(0,o.kt)("strong",{parentName:"li"},"object"),", extract ",(0,o.kt)("inlineCode",{parentName:"li"},"field")," from data, and trigger ",(0,o.kt)("inlineCode",{parentName:"li"},"target")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"targets")," can have multiple properties"),(0,o.kt)("li",{parentName:"ul"},"If the ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," was triggered with non-object, nothing would be happening"),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," is triggered with object but without propertpy ",(0,o.kt)("inlineCode",{parentName:"li"},"field"),", target for this ",(0,o.kt)("inlineCode",{parentName:"li"},"field")," will not be triggered")),(0,o.kt)("h3",{id:"arguments-1"},"Arguments"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"targets")," ",(0,o.kt)("inlineCode",{parentName:"li"},"(Record<string, Event<T> | Store<T> | Effect<T>>)")," \u2014 Flat object which key is key in ",(0,o.kt)("inlineCode",{parentName:"li"},"source")," payload, and value is unit to store value to.")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"source")," ",(0,o.kt)("inlineCode",{parentName:"li"},"(Event<T>")," | ",(0,o.kt)("inlineCode",{parentName:"li"},"Store<T>")," | ",(0,o.kt)("inlineCode",{parentName:"li"},"Effect<T>)")," \u2014 Source unit, data passed to it should be an object with fields from ",(0,o.kt)("inlineCode",{parentName:"li"},"targets"))),(0,o.kt)("h3",{id:"example-1"},"Example"),(0,o.kt)("h4",{id:"conditionally-save-value-to-stores"},"Conditionally save value to stores"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { createStore, createEvent, guard } from 'effector';\nimport { spread } from 'patronum/spread';\n\nconst $first = createStore('');\nconst $last = createStore('');\n\nconst formReceived = createEvent();\n\nguard({\n  source: formReceived,\n  filter: (form) => form.first.length > 0 && form.last.length > 0,\n  target: spread({\n    targets: {\n      first: $first,\n      last: $last,\n    },\n  }),\n});\n\n$first.watch((first) => console.log('First name', first));\n$last.watch((last) => console.log('Last name', last));\n\nformReceived({ first: '', last: '' });\n// Nothing, because filter returned true\n\nformReceived({ first: 'Hello', last: 'World' });\n// => First name Hello\n// => Last name World\n")),(0,o.kt)("h4",{id:"nested-spreading"},"Nested spreading"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const trigger = createEvent();\n\nconst $targetA = createStore('');\nconst $targetB = createStore(0);\nconst $targetC = createStore(false);\n\nspread({\n  source: trigger,\n  targets: {\n    first: $targetA,\n    second: spread({\n      targets: {\n        foo: $targetB,\n        bar: $targetC,\n      },\n    }),\n  },\n});\n\n$targetA.watch((payload) => console.log('targetA', payload));\n$targetB.watch((payload) => console.log('targetB', payload));\n$targetC.watch((payload) => console.log('targetC', payload));\n\ntrigger({\n  first: 'Hello',\n  second: {\n    foo: 200,\n    bar: true,\n  },\n});\n// => targetA Hello\n// => targetB 200\n// => targetC true\n")))}m.isMDXComponent=!0},5318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);